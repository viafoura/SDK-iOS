// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios15.4 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ViafouraSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import Foundation
import KeychainAccess
import Kingfisher
import Network
import SafariServices
import Swift
import UIKit
import _Concurrency
import _StringProcessing
public enum VFDislikeChatError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFDislikeChatError, b: ViafouraSDK.VFDislikeChatError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFDislikeChatError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFEditorPicksView : UIKit.UIView {
  @objc deinit
}
public struct VFColors {
  public static let colorBackgroundDefault: UIKit.UIColor
  public static let colorText1Default: UIKit.UIColor
  public static let colorText2Default: UIKit.UIColor
  public static let colorSeparatorDefault: UIKit.UIColor
  public static let colorFollowingDefault: UIKit.UIColor
  public static let colorErrorDefault: UIKit.UIColor
  public static let colorPinnedDefault: UIKit.UIColor
  public static let colorPrimaryDefault: UIKit.UIColor
  public static let colorPrimaryLightDefault: UIKit.UIColor
  public static let colorBorder1Default: UIKit.UIColor
  public static let colorModeratorBadgeDefault: UIKit.UIColor
  public init(colorPrimary: UIKit.UIColor = colorPrimaryDefault, colorPrimaryLight: UIKit.UIColor = colorPrimaryLightDefault, colorBackground: UIKit.UIColor = colorBackgroundDefault, colorSeparator: UIKit.UIColor = colorSeparatorDefault, colorAvatars: [UIKit.UIColor] = Constants.AvatarColors.colors)
}
public enum VFCreateCommentReplyError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFCreateCommentReplyError, b: ViafouraSDK.VFCreateCommentReplyError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFCreateCommentReplyError {
  public var errorDescription: Swift.String? {
    get
  }
}
extension ViafouraSDK.VFAuthenticationService {
  public func getUserLoginStatus(completion: @escaping ((Swift.Result<ViafouraSDK.VFLoginStatus, ViafouraSDK.VFLoginStatusError>) -> ()))
}
public enum VFLoginStatus {
  case notLoggedIn
  case loggedIn
  public static func == (a: ViafouraSDK.VFLoginStatus, b: ViafouraSDK.VFLoginStatus) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum VFLoginStatusError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFLoginStatusError, b: ViafouraSDK.VFLoginStatusError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFLoginStatusError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFUnflagCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUnflagCommentError, b: ViafouraSDK.VFUnflagCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUnflagCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
public protocol VFAdDelegate {
  func generateAd(viewController: ViafouraSDK.VFUIViewController, adPosition: Swift.Int) -> ViafouraSDK.VFAdView
  func getAdInterval(viewController: ViafouraSDK.VFUIViewController) -> Swift.Int
  func getFirstAdPosition(viewController: ViafouraSDK.VFUIViewController) -> Swift.Int
}
extension ViafouraSDK.VFAdDelegate {
  public func getFirstAdPosition(viewController: ViafouraSDK.VFUIViewController) -> Swift.Int
}
public protocol VFLocalAdDelegate {
  func generateAd(adPosition: Swift.Int) -> ViafouraSDK.VFAdView
  func getAdInterval() -> Swift.Int
  func getFirstAdPosition() -> Swift.Int
}
extension ViafouraSDK.VFLocalAdDelegate {
  public func getFirstAdPosition() -> Swift.Int
}
public enum VFFlagCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFFlagCommentError, b: ViafouraSDK.VFFlagCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFFlagCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFChatListError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFChatListError, b: ViafouraSDK.VFChatListError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFChatListError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFUpdateUserError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUpdateUserError, b: ViafouraSDK.VFUpdateUserError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUpdateUserError {
  public var errorDescription: Swift.String? {
    get
  }
}
public typealias VFActionsCallbacks = (ViafouraSDK.VFActionCallbackType) -> Swift.Void
public enum VFActionCallbackType {
  case seeMoreCommentsPressed
  case writeNewCommentPressed(actionType: ViafouraSDK.VFNewCommentActionType)
  case closeNewCommentPressed
  case openProfilePressed(userUUID: Foundation.UUID, presentationType: ViafouraSDK.VFProfilePresentationType)
  case notificationPressed(presentationType: ViafouraSDK.VFNotificationPresentationType)
  case closeProfilePressed
  case trendingArticlePressed(metadata: ViafouraSDK.VFArticleMetadata, containerId: Swift.String)
}
public enum VFNotificationPresentationType {
  case profile(userUUID: Foundation.UUID)
  case content(containerUUID: Foundation.UUID, contentUUID: Foundation.UUID, containerId: Swift.String)
}
public enum VFProfilePresentationType {
  case profile
  case feed
  public static func == (a: ViafouraSDK.VFProfilePresentationType, b: ViafouraSDK.VFProfilePresentationType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum VFNewCommentActionType {
  case create
  case reply(content: Foundation.UUID)
  case edit(content: Foundation.UUID)
}
public enum VFSingleChatError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFSingleChatError, b: ViafouraSDK.VFSingleChatError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFSingleChatError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFDislikeCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFDislikeCommentError, b: ViafouraSDK.VFDislikeCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFDislikeCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
@_hasMissingDesignatedInitializers public class AnalyticsService {
  public func logEventEngage(eventSessionUUID: Foundation.UUID, eventContainerId: Swift.String, eventContainerUUID: Foundation.UUID, eventArticleMetadata: ViafouraSDK.VFArticleMetadata, eventSessionStart: Foundation.Date, time: Swift.Int64, hiddenTime: Swift.Int, focuses: Swift.Int)
  public func logEvent(eventType: ViafouraSDK.EventType, eventSessionUUID: Foundation.UUID, eventAttemptedAction: ViafouraSDK.EventAttemptedAction, eventContainerId: Swift.String, eventArticleMetadata: ViafouraSDK.VFArticleMetadata, eventSessionStart: Foundation.Date)
  public func logTyping(contentContainerUUID: Foundation.UUID, threadUUID: Foundation.UUID, contentUUID: Foundation.UUID)
  @objc deinit
}
public enum VFChatSelectionError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFChatSelectionError, b: ViafouraSDK.VFChatSelectionError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFChatSelectionError {
  public var errorDescription: Swift.String? {
    get
  }
}
extension ViafouraSDK.VFAuthenticationService {
  public func login(email: Swift.String, password: Swift.String, completion: @escaping ((Swift.Result<ViafouraSDK.UserResponse, ViafouraSDK.VFLoginError>) -> ()))
}
public enum VFLoginError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFLoginError, b: ViafouraSDK.VFLoginError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFLoginError {
  public var errorDescription: Swift.String? {
    get
  }
}
extension ViafouraSDK.VFAuthenticationService {
  public func logout()
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFButton : UIKit.UIButton {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var isEnabled: Swift.Bool {
    @objc get
    @objc set
  }
  @objc deinit
}
public enum VFLikeCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFLikeCommentError, b: ViafouraSDK.VFLikeCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFLikeCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFEnableCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFEnableCommentError, b: ViafouraSDK.VFEnableCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFEnableCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum EventAttemptedAction : Swift.String, Swift.Encodable {
  case COMMENT_DISLIKED
  case COMMENT_FLAG
  case COMMENT_BOX_CLICKED
  case COMMENT_LIKED
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers public class CommentNode {
  @objc deinit
}
public enum CommentNodeType {
  case ad
  case comment
  public static func == (a: ViafouraSDK.CommentNodeType, b: ViafouraSDK.CommentNodeType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VFVerticalTrendingViewController : ViafouraSDK.VFUIViewController {
  @_Concurrency.MainActor(unsafe) public static var storyboardName: Swift.String
  @_Concurrency.MainActor(unsafe) public static func new(containerId: Swift.String?, title: Swift.String, limit: Swift.Int, daysPublished: Swift.Int?, trendWindow: Swift.Int, sort: ViafouraSDK.VFTrendingSortType, viewType: ViafouraSDK.VFTrendingViewType, settings: ViafouraSDK.VFSettings) -> ViafouraSDK.VFVerticalTrendingViewController?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) public func setAdDelegate(adDelegate: ViafouraSDK.VFAdDelegate)
  @_Concurrency.MainActor(unsafe) public func setActionCallbacks(callbacks: @escaping ViafouraSDK.VFActionsCallbacks)
  @_Concurrency.MainActor(unsafe) public func setLayoutDelegate(layoutDelegate: ViafouraSDK.VFLayoutDelegate)
  @_Concurrency.MainActor(unsafe) public func setCustomUIDelegate(customUIDelegate: ViafouraSDK.VFCustomUIDelegate)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension ViafouraSDK.VFVerticalTrendingViewController : UIKit.UITableViewDataSource {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
}
extension ViafouraSDK.VFVerticalTrendingViewController : UIKit.UITableViewDelegate {
}
extension ViafouraSDK.VFVerticalTrendingViewController : ViafouraSDK.VFLocalAdDelegate {
  @_Concurrency.MainActor(unsafe) public func generateAd(adPosition: Swift.Int) -> ViafouraSDK.VFAdView
  @_Concurrency.MainActor(unsafe) public func getAdInterval() -> Swift.Int
}
public enum VFUnflagChatError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUnflagChatError, b: ViafouraSDK.VFUnflagChatError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUnflagChatError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFSegmentedControl : UIKit.UISegmentedControl {
  @objc deinit
}
public enum VFLikeChatError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFLikeChatError, b: ViafouraSDK.VFLikeChatError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFLikeChatError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFFeaturedView : UIKit.UIView {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFDisableView : UIKit.UIView {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VFCarouselTrendingViewController : ViafouraSDK.VFUIViewController {
  @_Concurrency.MainActor(unsafe) public static var storyboardName: Swift.String
  @_Concurrency.MainActor(unsafe) public static func new(containerId: Swift.String?, title: Swift.String, limit: Swift.Int, daysPublished: Swift.Int?, trendWindow: Swift.Int, sort: ViafouraSDK.VFTrendingSortType, settings: ViafouraSDK.VFSettings) -> ViafouraSDK.VFCarouselTrendingViewController?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) public func setAdDelegate(adDelegate: ViafouraSDK.VFAdDelegate)
  @_Concurrency.MainActor(unsafe) public func setActionCallbacks(callbacks: @escaping ViafouraSDK.VFActionsCallbacks)
  @_Concurrency.MainActor(unsafe) public func setLayoutDelegate(layoutDelegate: ViafouraSDK.VFLayoutDelegate)
  @_Concurrency.MainActor(unsafe) public func setCustomUIDelegate(customUIDelegate: ViafouraSDK.VFCustomUIDelegate)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension ViafouraSDK.VFCarouselTrendingViewController : UIKit.UICollectionViewDataSource {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, numberOfItemsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, cellForItemAt indexPath: Foundation.IndexPath) -> UIKit.UICollectionViewCell
}
extension ViafouraSDK.VFCarouselTrendingViewController : UIKit.UICollectionViewDelegateFlowLayout {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, layout collectionViewLayout: UIKit.UICollectionViewLayout, insetForSectionAt section: Swift.Int) -> UIKit.UIEdgeInsets
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, layout collectionViewLayout: UIKit.UICollectionViewLayout, sizeForItemAt indexPath: Foundation.IndexPath) -> CoreFoundation.CGSize
}
extension ViafouraSDK.VFCarouselTrendingViewController : ViafouraSDK.VFLocalAdDelegate {
  @_Concurrency.MainActor(unsafe) public func generateAd(adPosition: Swift.Int) -> ViafouraSDK.VFAdView
  @_Concurrency.MainActor(unsafe) public func getAdInterval() -> Swift.Int
}
public enum VFCommentsProfileError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFCommentsProfileError, b: ViafouraSDK.VFCommentsProfileError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFCommentsProfileError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VFUIViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public protocol VFLoginDelegate {
  func startLogin()
}
public enum VFFilterType {
  case allComments
  case featured
  public static func == (a: ViafouraSDK.VFFilterType, b: ViafouraSDK.VFFilterType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum VFUndislikeChatError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUndislikeChatError, b: ViafouraSDK.VFUndislikeChatError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUndislikeChatError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFContentEditedView : UIKit.UIView {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class VFAuthenticationService {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFUnflagView : UIKit.UIView {
  @objc deinit
}
public enum VFEditorPickCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFEditorPickCommentError, b: ViafouraSDK.VFEditorPickCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFEditorPickCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
extension ViafouraSDK.VFAuthenticationService {
  public func signup(name: Swift.String, email: Swift.String, password: Swift.String, completion: @escaping ((Swift.Result<ViafouraSDK.UserResponse, ViafouraSDK.VFSignUpError>) -> ()))
}
public enum VFSignUpError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFSignUpError, b: ViafouraSDK.VFSignUpError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFSignUpError {
  public var errorDescription: Swift.String? {
    get
  }
}
extension ViafouraSDK.VFAuthenticationService {
  public func socialLogin(token: Swift.String, provider: ViafouraSDK.VFSocialLoginProvider, completion: @escaping ((Swift.Result<ViafouraSDK.UserResponse, ViafouraSDK.VFSocialLoginError>) -> ()))
}
public enum VFSocialLoginError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFSocialLoginError, b: ViafouraSDK.VFSocialLoginError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFSocialLoginError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFCommentContainerError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFCommentContainerError, b: ViafouraSDK.VFCommentContainerError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFCommentContainerError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFUnlikeCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUnlikeCommentError, b: ViafouraSDK.VFUnlikeCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUnlikeCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFUserMutesError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUserMutesError, b: ViafouraSDK.VFUserMutesError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUserMutesError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFUnmuteUserError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUnmuteUserError, b: ViafouraSDK.VFUnmuteUserError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUnmuteUserError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFMuteUserError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFMuteUserError, b: ViafouraSDK.VFMuteUserError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFMuteUserError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFSpamView : UIKit.UIView {
  @objc deinit
}
public enum VFFlagChatError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFFlagChatError, b: ViafouraSDK.VFFlagChatError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFFlagChatError {
  public var errorDescription: Swift.String? {
    get
  }
}
extension ViafouraSDK.VFAuthenticationService {
  public func openIdLogin(token: Swift.String, completion: @escaping ((Swift.Result<ViafouraSDK.UserResponse, ViafouraSDK.VFOpenIdLoginError>) -> ()))
}
public enum VFOpenIdLoginError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFOpenIdLoginError, b: ViafouraSDK.VFOpenIdLoginError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFOpenIdLoginError {
  public var errorDescription: Swift.String? {
    get
  }
}
public struct UserResponse : Swift.Decodable {
  public init(from decoder: Swift.Decoder) throws
}
public protocol VFLayoutDelegate {
  func containerHeightUpdated(viewController: ViafouraSDK.VFUIViewController, height: CoreFoundation.CGFloat)
}
public enum VFDeleteChatError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFDeleteChatError, b: ViafouraSDK.VFDeleteChatError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFDeleteChatError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFCreateCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFCreateCommentError, b: ViafouraSDK.VFCreateCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFCreateCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
public struct Constants {
}
extension ViafouraSDK.Constants {
  public struct AvatarColors {
    public static let colors: [UIKit.UIColor]
  }
}
extension UIKit.UIDevice {
  @_Concurrency.MainActor(unsafe) public static let modelName: Swift.String
}
public struct VFArticleMetadata {
  public init(url: Foundation.URL, title: Swift.String, subtitle: Swift.String, thumbnailUrl: Foundation.URL)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFAdView : UIKit.UIView {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class ViafouraSDK {
  public static let authentication: ViafouraSDK.VFAuthenticationService
  public static func initialize(siteUUID: Swift.String, siteDomain: Swift.String)
  public static func setLoggingEnabled(_ isLoggingEnabled: Swift.Bool)
  public static func isLoggingEnabled() -> Swift.Bool
  public static func auth() -> ViafouraSDK.VFAuthenticationService
  @objc deinit
}
public enum VFUserCommentsError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUserCommentsError, b: ViafouraSDK.VFUserCommentsError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUserCommentsError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum EventType : Swift.String, Swift.Encodable {
  case AD_LOAD
  case AD_VIEW
  case ATTEMPTED_ACTION
  case CHAT_PAGINATION
  case COMMENT_THREAD_SORT
  case CONTAINER_LOAD
  case ENGAGE
  case LOGIN_FAILURE
  case LOGIN_SUCCESS
  case LOGOUT
  case PAGE_VIEW
  case PASSWORD_RESET
  case SIGNUP
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers public class ChatContent : Swift.Decodable {
  @objc deinit
  required public init(from decoder: Swift.Decoder) throws
}
public enum VFSortType {
  case newest
  case oldest
  case mostLiked
  case mostReplies
  public var rawValue: Swift.String {
    get
  }
  public static func == (a: ViafouraSDK.VFSortType, b: ViafouraSDK.VFSortType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum VFCommentListError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFCommentListError, b: ViafouraSDK.VFCommentListError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFCommentListError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFEditCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFEditCommentError, b: ViafouraSDK.VFEditCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFEditCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFCustomBadgeView : UIKit.UIView {
  @objc deinit
}
extension ViafouraSDK.VFAuthenticationService {
  public func loginRadiusLogin(token: Swift.String, provider: ViafouraSDK.VFSocialLoginProvider, completion: @escaping ((Swift.Result<ViafouraSDK.UserResponse, ViafouraSDK.VFLoginRadiusLoginError>) -> ()))
}
public enum VFLoginRadiusLoginError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFLoginRadiusLoginError, b: ViafouraSDK.VFLoginRadiusLoginError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFLoginRadiusLoginError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VFPreviewCommentsViewController : ViafouraSDK.VFUIViewController {
  @_Concurrency.MainActor(unsafe) public static var storyboardName: Swift.String
  @_Concurrency.MainActor(unsafe) public static func new(containerId: Swift.String, articleMetadata: ViafouraSDK.VFArticleMetadata, loginDelegate: ViafouraSDK.VFLoginDelegate, settings: ViafouraSDK.VFSettings, paginationSize: Swift.Int = 10, defaultSort: ViafouraSDK.VFSortType = .newest) -> ViafouraSDK.VFPreviewCommentsViewController?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) public func setActionCallbacks(callbacks: @escaping ViafouraSDK.VFActionsCallbacks)
  @_Concurrency.MainActor(unsafe) public func setAdDelegate(adDelegate: ViafouraSDK.VFAdDelegate)
  @_Concurrency.MainActor(unsafe) public func setCustomUIDelegate(customUIDelegate: ViafouraSDK.VFCustomUIDelegate)
  @_Concurrency.MainActor(unsafe) public func setLayoutDelegate(layoutDelegate: ViafouraSDK.VFLayoutDelegate)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension ViafouraSDK.VFPreviewCommentsViewController : ViafouraSDK.VFLocalAdDelegate {
  @_Concurrency.MainActor(unsafe) public func generateAd(adPosition: Swift.Int) -> ViafouraSDK.VFAdView
  @_Concurrency.MainActor(unsafe) public func getAdInterval() -> Swift.Int
  @_Concurrency.MainActor(unsafe) public func getFirstAdPosition() -> Swift.Int
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFFlagsView : UIKit.UIView {
  @objc deinit
}
public enum VFTrendingSortType : Swift.String {
  case comments
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum VFTrendingViewType {
  case condensed
  case full
  public static func == (a: ViafouraSDK.VFTrendingViewType, b: ViafouraSDK.VFTrendingViewType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFNewCommentsNotificationView : UIKit.UIView {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFAllCommentsView : UIKit.UIView {
  @objc deinit
}
public enum VFUndislikeCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUndislikeCommentError, b: ViafouraSDK.VFUndislikeCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUndislikeCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFFollowView : UIKit.UIView {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VFLabel : UIKit.UILabel {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public enum VFCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFCommentError, b: ViafouraSDK.VFCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFContentRemovedView : UIKit.UIView {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFLoadingView : UIKit.UIActivityIndicatorView {
  @objc deinit
}
public enum VFTopicsSubscribedError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFTopicsSubscribedError, b: ViafouraSDK.VFTopicsSubscribedError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFTopicsSubscribedError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFTabView : UIKit.UIView {
  @objc deinit
}
public enum VFCustomizableView {
  case postButton(button: ViafouraSDK.VFButton)
  case postTextView(textField: ViafouraSDK.VFTextView)
  case postCloseImage(image: ViafouraSDK.VFImageView)
  case postTitle(label: ViafouraSDK.VFLabel)
  case postPlaceholderLabel(label: ViafouraSDK.VFLabel)
  case postLoadingView(loadingView: ViafouraSDK.VFLoadingView)
  case profileNameLabel(label: ViafouraSDK.VFLabel)
  case profileLogoutLabel(label: ViafouraSDK.VFLabel)
  case profileCloseImage(image: ViafouraSDK.VFImageView)
  case profileLikesLabel(label: ViafouraSDK.VFLabel)
  case profileFollowersLabel(label: ViafouraSDK.VFLabel)
  case profileSegmentedControl(segmentedControl: ViafouraSDK.VFSegmentedControl)
  case commentCellDateLabel(label: ViafouraSDK.VFLabel)
  case commentCellNameLabel(label: ViafouraSDK.VFLabel)
  case commentCellContentLabel(label: ViafouraSDK.VFLabel)
  case commentCellLikeImage(image: ViafouraSDK.VFImageView)
  case commentCellLikeLabel(label: ViafouraSDK.VFLabel)
  case commentCellDislikeImage(image: ViafouraSDK.VFImageView)
  case commentCellDislikeLabel(label: ViafouraSDK.VFLabel)
  case commentCellReplyLabel(label: ViafouraSDK.VFLabel)
  case commentCellRepliesLabel(label: ViafouraSDK.VFLabel)
  case previewEmptyCommentsView(emptyCommentsView: ViafouraSDK.VFEmptyCommentsView)
  case previewSeeMoreCommentsButton(button: ViafouraSDK.VFButton)
  case previewTitleLabel(label: ViafouraSDK.VFLabel)
  case previewCounterLabel(label: ViafouraSDK.VFLabel)
  case previewLoadingView(loadingView: ViafouraSDK.VFLoadingView)
  case trendingVerticalFullImage(image: ViafouraSDK.VFImageView)
  case trendingVerticalFullTitle(label: ViafouraSDK.VFLabel)
  case trendingVerticalFullCount(label: ViafouraSDK.VFLabel)
  case trendingVerticalCondensedTitle(label: ViafouraSDK.VFLabel)
  case trendingVerticalCondensedCount(label: ViafouraSDK.VFLabel)
  case trendingCarouselTitle(label: ViafouraSDK.VFLabel)
  case trendingCarouselImage(image: ViafouraSDK.VFImageView)
  case trendingCarouselCount(label: ViafouraSDK.VFLabel)
  case chatCellContentLabel(label: ViafouraSDK.VFLabel)
  case chatCellDateLabel(label: ViafouraSDK.VFLabel)
  case chatCellUserNameLabel(label: ViafouraSDK.VFLabel)
}
public enum VFUnpinCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUnpinCommentError, b: ViafouraSDK.VFUnpinCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUnpinCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFCommentRepliesError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFCommentRepliesError, b: ViafouraSDK.VFCommentRepliesError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFCommentRepliesError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFReplyChatError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFReplyChatError, b: ViafouraSDK.VFReplyChatError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFReplyChatError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFEmptyCommentsView : UIKit.UIView {
  @objc deinit
}
public enum VFTrendingError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFTrendingError, b: ViafouraSDK.VFTrendingError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFTrendingError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFDisabledView : UIKit.UIView {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFEnableView : UIKit.UIView {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VFProfileViewController : ViafouraSDK.VFUIViewController {
  @_Concurrency.MainActor(unsafe) public static var storyboardName: Swift.String
  @_Concurrency.MainActor(unsafe) public static func new(userUUID: Foundation.UUID, presentationType: ViafouraSDK.VFProfilePresentationType, loginDelegate: ViafouraSDK.VFLoginDelegate, settings: ViafouraSDK.VFSettings) -> ViafouraSDK.VFProfileViewController?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) public func setActionCallbacks(callbacks: @escaping ViafouraSDK.VFActionsCallbacks)
  @_Concurrency.MainActor(unsafe) public func setCustomUIDelegate(customUIDelegate: ViafouraSDK.VFCustomUIDelegate)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFSeparatorView : UIKit.UIView {
  @objc deinit
}
public enum VFChatContainerError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFChatContainerError, b: ViafouraSDK.VFChatContainerError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFChatContainerError {
  public var errorDescription: Swift.String? {
    get
  }
}
@_hasMissingDesignatedInitializers public class TrendingContent {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class CommentContent {
  @objc deinit
}
extension ViafouraSDK.VFAuthenticationService {
  public func cookieLogin(token: Swift.String, type: Swift.String, completion: @escaping ((Swift.Result<ViafouraSDK.VFCookieLoginData, ViafouraSDK.VFCookieLoginError>) -> ()))
}
public struct VFCookieLoginData {
}
public enum VFCookieLoginError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFCookieLoginError, b: ViafouraSDK.VFCookieLoginError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFCookieLoginError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFSubscribeTopicError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFSubscribeTopicError, b: ViafouraSDK.VFSubscribeTopicError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFSubscribeTopicError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFNewRepliesNotificationView : UIKit.UIView {
  @objc deinit
}
public enum VFCreateChatError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFCreateChatError, b: ViafouraSDK.VFCreateChatError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFCreateChatError {
  public var errorDescription: Swift.String? {
    get
  }
}
public struct VFFonts {
  public static let fontBlackDefault: UIKit.UIFont
  public static let fontBoldDefault: UIKit.UIFont
  public static let fontExtraBoldDefault: UIKit.UIFont
  public static let fontExtraLightDefault: UIKit.UIFont
  public static let fontLightDefault: UIKit.UIFont
  public static let fontMediumDefault: UIKit.UIFont
  public static let fontRegularDefault: UIKit.UIFont
  public static let fontSemiboldDefault: UIKit.UIFont
  public static let fontThinDefault: UIKit.UIFont
  public var fontRegular: UIKit.UIFont
  public var fontMedium: UIKit.UIFont
  public var fontBold: UIKit.UIFont
  public var fontLight: UIKit.UIFont
  public var fontSemibold: UIKit.UIFont
  public init(fontLight: UIKit.UIFont = fontLightDefault, fontRegular: UIKit.UIFont = fontRegularDefault, fontMedium: UIKit.UIFont = fontMediumDefault, fontSemibold: UIKit.UIFont = fontSemiboldDefault, fontBold: UIKit.UIFont = fontBoldDefault)
}
public enum VFRemoveEditorPickCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFRemoveEditorPickCommentError, b: ViafouraSDK.VFRemoveEditorPickCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFRemoveEditorPickCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
public protocol StoryboardCreateable : UIKit.UIViewController {
  static var storyboardName: Swift.String { get }
}
extension ViafouraSDK.StoryboardCreateable {
  public static func new() -> Self?
}
public enum VFSpamCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFSpamCommentError, b: ViafouraSDK.VFSpamCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFSpamCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFPinnedView : UIKit.UIView {
  @objc deinit
}
public enum VFUnsubscribeTopicError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUnsubscribeTopicError, b: ViafouraSDK.VFUnsubscribeTopicError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUnsubscribeTopicError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VFUnspamView : UIKit.UIView {
  @objc deinit
}
public enum VFPinCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFPinCommentError, b: ViafouraSDK.VFPinCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFPinCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFUnlikeChatError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUnlikeChatError, b: ViafouraSDK.VFUnlikeChatError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUnlikeChatError {
  public var errorDescription: Swift.String? {
    get
  }
}
public protocol VFCustomUIDelegate {
  func customizeView(view: ViafouraSDK.VFCustomizableView)
}
public struct VFSettings {
  public let fonts: ViafouraSDK.VFFonts
  public let colors: ViafouraSDK.VFColors
  public init(colors: ViafouraSDK.VFColors, fonts: ViafouraSDK.VFFonts = VFFonts())
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VFNewCommentViewController : ViafouraSDK.VFUIViewController {
  @_Concurrency.MainActor(unsafe) public static func new(newCommentActionType: ViafouraSDK.VFNewCommentActionType, containerId: Swift.String, articleMetadata: ViafouraSDK.VFArticleMetadata, loginDelegate: ViafouraSDK.VFLoginDelegate, settings: ViafouraSDK.VFSettings) -> ViafouraSDK.VFNewCommentViewController?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) public func setActionCallbacks(callbacks: @escaping ViafouraSDK.VFActionsCallbacks)
  @_Concurrency.MainActor(unsafe) public func setCustomUIDelegate(customUIDelegate: ViafouraSDK.VFCustomUIDelegate)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var canBecomeFirstResponder: Swift.Bool {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var canResignFirstResponder: Swift.Bool {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension ViafouraSDK.VFNewCommentViewController : UIKit.UITextViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textViewDidChange(_ textView: UIKit.UITextView)
}
public enum WidgetType : Swift.String, Swift.Encodable {
  case LIVE_BLOG
  case CONTENT_RECIRCULATION
  case STANDALONE_AD
  case CONVERSATION_STARTER
  case LIVECHAT
  case LIVE_CONVERSATIONS
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension ViafouraSDK.VFAuthenticationService {
  public func resetPassword(email: Swift.String, completion: @escaping ((Swift.Result<Swift.Bool, ViafouraSDK.VFPasswordResetError>) -> ()))
}
public enum VFPasswordResetError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFPasswordResetError, b: ViafouraSDK.VFPasswordResetError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFPasswordResetError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VFImageView : UIKit.UIImageView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(image: UIKit.UIImage?)
  @available(iOS 3.0, *)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(image: UIKit.UIImage?, highlightedImage: UIKit.UIImage?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public enum VFUserInfoError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUserInfoError, b: ViafouraSDK.VFUserInfoError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUserInfoError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFDisableCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFDisableCommentError, b: ViafouraSDK.VFDisableCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFDisableCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFSocialLoginProvider : Swift.String, Swift.Encodable, Swift.Decodable {
  case google
  case twitter
  case linkedin
  case apple
  case viafouraDefinedCookie
  case facebook
  case yahoo
  case windowslive
  case aol
  case none
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VFTextView : UIKit.UITextView {
  @available(iOS 7.0, *)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect, textContainer: UIKit.NSTextContainer?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public enum VFUnspamCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFUnspamCommentError, b: ViafouraSDK.VFUnspamCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFUnspamCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
public enum VFDeleteCommentError : Foundation.LocalizedError {
  case unknown
  public static func == (a: ViafouraSDK.VFDeleteCommentError, b: ViafouraSDK.VFDeleteCommentError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ViafouraSDK.VFDeleteCommentError {
  public var errorDescription: Swift.String? {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VFLiveChatViewController : ViafouraSDK.VFUIViewController {
  @_Concurrency.MainActor(unsafe) public static var storyboardName: Swift.String
  @_Concurrency.MainActor(unsafe) public static func new(containerId: Swift.String, articleMetadata: ViafouraSDK.VFArticleMetadata, loginDelegate: ViafouraSDK.VFLoginDelegate, settings: ViafouraSDK.VFSettings) -> ViafouraSDK.VFLiveChatViewController?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) public func setActionCallbacks(callbacks: @escaping ViafouraSDK.VFActionsCallbacks)
  @_Concurrency.MainActor(unsafe) public func setCustomUIDelegate(customUIDelegate: ViafouraSDK.VFCustomUIDelegate)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension ViafouraSDK.VFLiveChatViewController : UIKit.UITextViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textViewDidChange(_ textView: UIKit.UITextView)
}
extension ViafouraSDK.VFDislikeChatError : Swift.Equatable {}
extension ViafouraSDK.VFDislikeChatError : Swift.Hashable {}
extension ViafouraSDK.VFCreateCommentReplyError : Swift.Equatable {}
extension ViafouraSDK.VFCreateCommentReplyError : Swift.Hashable {}
extension ViafouraSDK.VFLoginStatus : Swift.Equatable {}
extension ViafouraSDK.VFLoginStatus : Swift.Hashable {}
extension ViafouraSDK.VFLoginStatusError : Swift.Equatable {}
extension ViafouraSDK.VFLoginStatusError : Swift.Hashable {}
extension ViafouraSDK.VFUnflagCommentError : Swift.Equatable {}
extension ViafouraSDK.VFUnflagCommentError : Swift.Hashable {}
extension ViafouraSDK.VFFlagCommentError : Swift.Equatable {}
extension ViafouraSDK.VFFlagCommentError : Swift.Hashable {}
extension ViafouraSDK.VFChatListError : Swift.Equatable {}
extension ViafouraSDK.VFChatListError : Swift.Hashable {}
extension ViafouraSDK.VFUpdateUserError : Swift.Equatable {}
extension ViafouraSDK.VFUpdateUserError : Swift.Hashable {}
extension ViafouraSDK.VFProfilePresentationType : Swift.Equatable {}
extension ViafouraSDK.VFProfilePresentationType : Swift.Hashable {}
extension ViafouraSDK.VFSingleChatError : Swift.Equatable {}
extension ViafouraSDK.VFSingleChatError : Swift.Hashable {}
extension ViafouraSDK.VFDislikeCommentError : Swift.Equatable {}
extension ViafouraSDK.VFDislikeCommentError : Swift.Hashable {}
extension ViafouraSDK.VFChatSelectionError : Swift.Equatable {}
extension ViafouraSDK.VFChatSelectionError : Swift.Hashable {}
extension ViafouraSDK.VFLoginError : Swift.Equatable {}
extension ViafouraSDK.VFLoginError : Swift.Hashable {}
extension ViafouraSDK.VFLikeCommentError : Swift.Equatable {}
extension ViafouraSDK.VFLikeCommentError : Swift.Hashable {}
extension ViafouraSDK.VFEnableCommentError : Swift.Equatable {}
extension ViafouraSDK.VFEnableCommentError : Swift.Hashable {}
extension ViafouraSDK.EventAttemptedAction : Swift.Equatable {}
extension ViafouraSDK.EventAttemptedAction : Swift.Hashable {}
extension ViafouraSDK.EventAttemptedAction : Swift.RawRepresentable {}
extension ViafouraSDK.CommentNodeType : Swift.Equatable {}
extension ViafouraSDK.CommentNodeType : Swift.Hashable {}
extension ViafouraSDK.VFUnflagChatError : Swift.Equatable {}
extension ViafouraSDK.VFUnflagChatError : Swift.Hashable {}
extension ViafouraSDK.VFLikeChatError : Swift.Equatable {}
extension ViafouraSDK.VFLikeChatError : Swift.Hashable {}
extension ViafouraSDK.VFCommentsProfileError : Swift.Equatable {}
extension ViafouraSDK.VFCommentsProfileError : Swift.Hashable {}
extension ViafouraSDK.VFFilterType : Swift.Equatable {}
extension ViafouraSDK.VFFilterType : Swift.Hashable {}
extension ViafouraSDK.VFUndislikeChatError : Swift.Equatable {}
extension ViafouraSDK.VFUndislikeChatError : Swift.Hashable {}
extension ViafouraSDK.VFEditorPickCommentError : Swift.Equatable {}
extension ViafouraSDK.VFEditorPickCommentError : Swift.Hashable {}
extension ViafouraSDK.VFSignUpError : Swift.Equatable {}
extension ViafouraSDK.VFSignUpError : Swift.Hashable {}
extension ViafouraSDK.VFSocialLoginError : Swift.Equatable {}
extension ViafouraSDK.VFSocialLoginError : Swift.Hashable {}
extension ViafouraSDK.VFCommentContainerError : Swift.Equatable {}
extension ViafouraSDK.VFCommentContainerError : Swift.Hashable {}
extension ViafouraSDK.VFUnlikeCommentError : Swift.Equatable {}
extension ViafouraSDK.VFUnlikeCommentError : Swift.Hashable {}
extension ViafouraSDK.VFUserMutesError : Swift.Equatable {}
extension ViafouraSDK.VFUserMutesError : Swift.Hashable {}
extension ViafouraSDK.VFUnmuteUserError : Swift.Equatable {}
extension ViafouraSDK.VFUnmuteUserError : Swift.Hashable {}
extension ViafouraSDK.VFMuteUserError : Swift.Equatable {}
extension ViafouraSDK.VFMuteUserError : Swift.Hashable {}
extension ViafouraSDK.VFFlagChatError : Swift.Equatable {}
extension ViafouraSDK.VFFlagChatError : Swift.Hashable {}
extension ViafouraSDK.VFOpenIdLoginError : Swift.Equatable {}
extension ViafouraSDK.VFOpenIdLoginError : Swift.Hashable {}
extension ViafouraSDK.VFDeleteChatError : Swift.Equatable {}
extension ViafouraSDK.VFDeleteChatError : Swift.Hashable {}
extension ViafouraSDK.VFCreateCommentError : Swift.Equatable {}
extension ViafouraSDK.VFCreateCommentError : Swift.Hashable {}
extension ViafouraSDK.VFUserCommentsError : Swift.Equatable {}
extension ViafouraSDK.VFUserCommentsError : Swift.Hashable {}
extension ViafouraSDK.EventType : Swift.Equatable {}
extension ViafouraSDK.EventType : Swift.Hashable {}
extension ViafouraSDK.EventType : Swift.RawRepresentable {}
extension ViafouraSDK.VFSortType : Swift.Equatable {}
extension ViafouraSDK.VFSortType : Swift.Hashable {}
extension ViafouraSDK.VFCommentListError : Swift.Equatable {}
extension ViafouraSDK.VFCommentListError : Swift.Hashable {}
extension ViafouraSDK.VFEditCommentError : Swift.Equatable {}
extension ViafouraSDK.VFEditCommentError : Swift.Hashable {}
extension ViafouraSDK.VFLoginRadiusLoginError : Swift.Equatable {}
extension ViafouraSDK.VFLoginRadiusLoginError : Swift.Hashable {}
extension ViafouraSDK.VFTrendingSortType : Swift.Equatable {}
extension ViafouraSDK.VFTrendingSortType : Swift.Hashable {}
extension ViafouraSDK.VFTrendingSortType : Swift.RawRepresentable {}
extension ViafouraSDK.VFTrendingViewType : Swift.Equatable {}
extension ViafouraSDK.VFTrendingViewType : Swift.Hashable {}
extension ViafouraSDK.VFUndislikeCommentError : Swift.Equatable {}
extension ViafouraSDK.VFUndislikeCommentError : Swift.Hashable {}
extension ViafouraSDK.VFCommentError : Swift.Equatable {}
extension ViafouraSDK.VFCommentError : Swift.Hashable {}
extension ViafouraSDK.VFTopicsSubscribedError : Swift.Equatable {}
extension ViafouraSDK.VFTopicsSubscribedError : Swift.Hashable {}
extension ViafouraSDK.VFUnpinCommentError : Swift.Equatable {}
extension ViafouraSDK.VFUnpinCommentError : Swift.Hashable {}
extension ViafouraSDK.VFCommentRepliesError : Swift.Equatable {}
extension ViafouraSDK.VFCommentRepliesError : Swift.Hashable {}
extension ViafouraSDK.VFReplyChatError : Swift.Equatable {}
extension ViafouraSDK.VFReplyChatError : Swift.Hashable {}
extension ViafouraSDK.VFTrendingError : Swift.Equatable {}
extension ViafouraSDK.VFTrendingError : Swift.Hashable {}
extension ViafouraSDK.VFChatContainerError : Swift.Equatable {}
extension ViafouraSDK.VFChatContainerError : Swift.Hashable {}
extension ViafouraSDK.VFCookieLoginError : Swift.Equatable {}
extension ViafouraSDK.VFCookieLoginError : Swift.Hashable {}
extension ViafouraSDK.VFSubscribeTopicError : Swift.Equatable {}
extension ViafouraSDK.VFSubscribeTopicError : Swift.Hashable {}
extension ViafouraSDK.VFCreateChatError : Swift.Equatable {}
extension ViafouraSDK.VFCreateChatError : Swift.Hashable {}
extension ViafouraSDK.VFRemoveEditorPickCommentError : Swift.Equatable {}
extension ViafouraSDK.VFRemoveEditorPickCommentError : Swift.Hashable {}
extension ViafouraSDK.VFSpamCommentError : Swift.Equatable {}
extension ViafouraSDK.VFSpamCommentError : Swift.Hashable {}
extension ViafouraSDK.VFUnsubscribeTopicError : Swift.Equatable {}
extension ViafouraSDK.VFUnsubscribeTopicError : Swift.Hashable {}
extension ViafouraSDK.VFPinCommentError : Swift.Equatable {}
extension ViafouraSDK.VFPinCommentError : Swift.Hashable {}
extension ViafouraSDK.VFUnlikeChatError : Swift.Equatable {}
extension ViafouraSDK.VFUnlikeChatError : Swift.Hashable {}
extension ViafouraSDK.WidgetType : Swift.Equatable {}
extension ViafouraSDK.WidgetType : Swift.Hashable {}
extension ViafouraSDK.WidgetType : Swift.RawRepresentable {}
extension ViafouraSDK.VFPasswordResetError : Swift.Equatable {}
extension ViafouraSDK.VFPasswordResetError : Swift.Hashable {}
extension ViafouraSDK.VFUserInfoError : Swift.Equatable {}
extension ViafouraSDK.VFUserInfoError : Swift.Hashable {}
extension ViafouraSDK.VFDisableCommentError : Swift.Equatable {}
extension ViafouraSDK.VFDisableCommentError : Swift.Hashable {}
extension ViafouraSDK.VFSocialLoginProvider : Swift.Equatable {}
extension ViafouraSDK.VFSocialLoginProvider : Swift.Hashable {}
extension ViafouraSDK.VFSocialLoginProvider : Swift.RawRepresentable {}
extension ViafouraSDK.VFUnspamCommentError : Swift.Equatable {}
extension ViafouraSDK.VFUnspamCommentError : Swift.Hashable {}
extension ViafouraSDK.VFDeleteCommentError : Swift.Equatable {}
extension ViafouraSDK.VFDeleteCommentError : Swift.Hashable {}
